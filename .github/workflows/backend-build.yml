name: Backend Continuous Deployment

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:
  
env:
  P_VERSION: 3.12.1
  IMAGE_REPO_NAME: dailb-project4-be
  IMAGE_TAG: latest

jobs:
  lint:
    name: lint process
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.P_VERSION}}
      
      - name: Install Linting Tools and Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv flake8
  
      - name: Install dependencies
        run: |
          pipenv install
  test: 
    name: testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{env.P_VERSION}}
      
      - name: Install Testing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pytest
  
      - name: Install dependencies
        run: |
          pipenv install
  
      - name: Run Backend Tests
        run: | 
          pipenv run test
  build:
    name: BUILD process
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Configure AWS Credentials for Deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login AWS
        uses: aws-actions/amazon-ecr-login@v2
        with: 
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Build and Push Docker Image
        run: |
          aws eks --region us-east-1 update-kubeconfig --name dailb-cluster
          kubectl get svc
          docker build -t ${{env.IMAGE_REPO_NAME}} .
          docker tag ${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}} 427645120130.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
          docker push 427645120130.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
  
      - name: Deploy to EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name dailb-cluster
          cd k8s
          kustomize edit set image backend=427645120130.dkr.ecr.us-east-1.amazonaws.com/${{env.IMAGE_REPO_NAME}}:${{env.IMAGE_TAG}}
          kustomize build | kubectl apply -f -